#include <behaviors/rgbled_widget.dtsi>  // 新しく追加するインクルード
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/mouse.h>

#define MOUSE 6

&mt {
    flavor = "balanced";
    quick-tap-ms = <0>;
};

/ {
    combos {
        compatible = "zmk,combos";

        tab {
            bindings = <&kp TAB>;
            key-positions = <11 12>;
        };

        shift_tab {
            bindings = <&kp LS(TAB)>;
            key-positions = <12 13>;
        };

        muhennkann {
            bindings = <&to_layer_0 INT_MUHENKAN>;
            key-positions = <11 10>;
        };

        double_quotation {
            bindings = <&kp DOUBLE_QUOTES>;
            key-positions = <20 21>;
        };

        eq {
            bindings = <&kp EQUAL>;
            key-positions = <24 25>;
        };
    };

    macros {
        to_layer_0: to_layer_0 {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            bindings = <&to 0 &macro_param_1to1 &kp MACRO_PLACEHOLDER>;
            label = "TO_LAYER_0";
        };
    };

    behaviors {
        lt_to_layer_0: lt_to_layer_0 {
            compatible = "zmk,behavior-hold-tap";
            label = "LAYER_TAP_TO_0";
            bindings = <&mo>, <&to_layer_0>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp Q             &kp W  &lt 5 E  &kp R  &kp T                                                           &kp Y        &kp U          &kp I      &kp O         &kp P
&kp A             &kp S  &kp D    &kp F  &kp G        &kp MINUS                                          &kp H        &kp J          &kp K      &kp L         &kp ENTER
&mt LEFT_SHIFT Z  &kp X  &kp C    &kp V  &kp B        &kp COLON             &kp SEMICOLON                &kp N        &kp M          &kp COMMA  &kp PERIOD    &mt LEFT_SHIFT SLASH
&kp LCTRL                                &lt 2 SPACE  &lt_to_layer_0 4 J    &lt_to_layer_0 3 INT_HENKAN  &lt 1 SPACE  &kp BACKSPACE  &kp DEL    &kp LEFT_WIN  &kp LEFT_ALT
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_DN C_VOL_UP &inc_dec_kp C_VOL_DN C_VOL_UP>;
        };

        layer_1 {
            bindings = <
&kp ESCAPE  &kp LEFT_BRACE    &kp RIGHT_BRACE    &kp LS(COMMA)         &kp LS(PERIOD)                           &trans  &kp HOME        &kp UP_ARROW    &kp END          &trans
&trans      &kp LEFT_BRACKET  &kp RIGHT_BRACKET  &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &trans            &trans  &kp LEFT_ARROW  &kp DOWN_ARROW  &kp RIGHT_ARROW  &kp ENTER
&trans      &trans            &trans             &trans                &trans                 &trans    &trans  &trans  &kp DEL         &kp PAGE_UP     &kp PAGE_DOWN    &kp BACKSLASH
&trans                                                                 &trans                 &trans    &trans  &trans  &trans          &trans          &trans           &kp PIPE
            >;

            sensor-bindings = <&inc_dec_kp LC(PAGE_UP) LC(PAGE_DOWN)>;
        };

        layer_2 {
            bindings = <
&kp EXCLAMATION  &kp AT_SIGN  &kp HASH  &kp DOLLAR  &kp PERCENT                             &kp CARET  &kp AMPERSAND  &kp ASTERISK  &kp MINUS  &kp EQUAL
&kp 1            &kp 2        &kp 3     &kp 4       &kp 5        &kp UNDERSCORE             &kp 6      &kp 7          &kp 8         &kp 9      &kp 0
&kp F1           &kp F2       &kp F3    &kp F4      &kp F5       &kp F11           &kp F12  &kp F6     &kp F7         &kp F8        &kp F9     &kp F10
&trans                                              &trans       &trans            &trans   &trans     &trans         &trans        &trans     &trans
            >;
        };

        layer_3 {
            bindings = <
&kp ESCAPE      &kp LC(LS(TAB))         &kp UP_ARROW    &kp LC(TAB)              &trans                     &trans  &trans  &trans  &trans  &trans
&kp HOME        &kp LEFT_ARROW          &kp DOWN_ARROW  &kp RIGHT_ARROW          &kp END  &trans            &trans  &trans  &trans  &trans  &trans
&kp LEFT_SHIFT  &kp LG(LS(LEFT_ARROW))  &trans          &kp LG(LS(RIGHT_ARROW))  &trans   &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans                                                                           &trans   &trans    &trans  &trans  &trans  &trans  &trans  &trans
            >;

            sensor-bindings = <&inc_dec_kp LC(PAGE_UP) LC(PAGE_DOWN)>;
        };

        layer_4 {
            bindings = <
&trans  &trans  &kp LC(LS(TAB))         &kp LC(TAB)              &trans                    &trans  &trans  &trans  &trans  &trans
&trans  &trans  &kp LC(LG(LEFT_ARROW))  &kp LC(LG(RIGHT_ARROW))  &trans  &trans            &trans  &trans  &trans  &trans  &trans
&trans  &trans  &kp LG(LS(LEFT_ARROW))  &kp LG(LS(RIGHT_ARROW))  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans                                                           &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
            >;
        };

        layer_5 {
            bindings = <
&trans  &trans        &trans        &trans        &trans                         &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4
&trans  &trans        &trans        &trans        &trans  &trans                 &trans        &trans        &trans        &trans        &trans
&trans  &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &trans  &trans    &bootloader  &trans        &trans        &trans        &trans        &bt BT_CLR
&trans                                            &trans  &trans    &trans       &trans        &trans        &trans        &trans        &bt BT_CLR_ALL
            >;
        };

        MOUSE {
            bindings = <
&trans  &trans    &trans    &trans    &trans                    &trans  &trans  &trans  &trans  &trans
&trans  &mkp MB1  &mkp MB3  &mkp MB2  &trans  &trans            &trans  &trans  &trans  &trans  &trans
&trans  &trans    &trans    &trans    &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans                                &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
            >;
        };
    };
};
